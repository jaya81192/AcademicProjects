import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map.Entry;


public class GenerateFrequency {
	
	public static void pushmap(HashMap<String,Integer> map, String s){
		if(map.get(s)==null)
			map.put(s, 1);
		else
			map.put(s, map.get(s)+1);
	}
	
	public static void main(String[] args) throws IOException {
		HashSet<String> set = new HashSet<String>();
		ArrayList<String> Input=new ArrayList<String>();
		Input=(ArrayList<String>) Files.readAllLines(Paths.get("C:\\Users\\venky\\Documents\\ASMInstructionSet.txt"), StandardCharsets.US_ASCII);
		
		for (String opcode : Input.get(0).split("\\t"))
			set.add(opcode.toLowerCase());
		File folder = new File("C:\\Users\\venky\\Documents\\KaggleFiles");
		File[] listOfFiles = folder.listFiles();
		int count=0;
		for (File file : listOfFiles) {
		    if (file.isFile()) {
		    	System.out.println(++count);
		    	String filename=file.getName();
		    	String newFileName=filename.substring(0, filename.length()-4)+".csv";
	//			File file = new File("C:\\Users\\venky\\Documents\\KaggleFiles\\0A32eTdBKayjCWhZqDOQ.asm");
				FileReader inputFile = new FileReader("C:\\Users\\venky\\Documents\\KaggleFiles\\"+filename);
		        BufferedReader bufferReader = new BufferedReader(inputFile);
		        String line;
		        FileWriter writer = new FileWriter("C:\\Users\\venky\\Documents\\KaggleFiles\\"+newFileName);
		        BufferedWriter bufferwriter = new BufferedWriter(writer);
		        HashMap<String,Integer> map = new HashMap<String,Integer>();
		        StringBuilder content = new StringBuilder();
		        Integer endofngram = 1;
		        while ((line = bufferReader.readLine()) != null)   {
		  //      	System.out.println(line);
		        	String[] Part = line.split("\\t");
				    if(!Part[0].startsWith(".rdata:") && !Part[0].startsWith(".data:") && !Part[0].startsWith(".idata:") && !Part[0].startsWith("HEADER:")){
				        if(Part[0].length()>14){
				        		for(String part : line.split("\\s+")){
				        			if(set.contains(part.toLowerCase())){
	/*			        				if(endofngram!=3){
				        					content.append(part.toLowerCase()+"\t");
				        					endofngram+=1;
				        				}
				        				else{
				        					content.append(part.toLowerCase()+"\n");
				        					endofngram=1;
				        				} */
				        				pushmap(map,part.toLowerCase());
				        			}
				        		}
				        }
				    }
		        }
		        bufferReader.close();
/*		        System.out.println(content);
		        String[] lines = content.toString().split("\\n");
		        for(String ngrams: lines){
		        	String[] ngram = ngrams.split("\\t");
		        	int length=0;
		        	
		        	while(length < ngram.length){
		        		pushmap(map,ngram[length]);
		        		if(length!=(ngram.length-1))
		        			pushmap(map,ngram[length]+"\t"+ngram[length+1]);
		        		else if(ngram.length>2)
		        			pushmap(map,ngram[0]+"\t"+ngram[ngram.length-1]);
		        		length+=1;
		        	}
		        	
		        	pushmap(map,ngrams);
		        }*/
		        
		        System.out.println(map.size());
		        for(Entry<String,Integer> entry : map.entrySet()){
					String key = entry.getKey().toString();;
		            Integer value = entry.getValue();
					bufferwriter.append(key+","+value+"\n");
				}
		        bufferwriter.close();
		    }
		}
	}
}
