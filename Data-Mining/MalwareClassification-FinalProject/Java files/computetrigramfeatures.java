import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map.Entry;


public class computetrigramfeatures {
	
	public static void pushmap(HashMap<String,Integer> map, String s){
		if(map.get(s)==null)
			map.put(s, 1);
		else
			map.put(s, map.get(s)+1);
	}
	
	public static void main(String[] args) throws IOException {
		HashSet<String> set = new HashSet<String>();
		FileWriter Writer = new FileWriter("C:\\Users\\venky\\Desktop\\Data Mining\\finaltrigramlist.csv");
		BufferedWriter buffwriter = new BufferedWriter(Writer);
		File folder = new File("C:\\Users\\venky\\Desktop\\Data Mining\\Opcodes");
		File[] listOfFiles = folder.listFiles();
		for (File file : listOfFiles){
			if (file.isFile()) {
				HashMap<String,Integer> map = new HashMap<String,Integer>();
				String filename=file.getName();
				FileReader inputFile = new FileReader("C:\\Users\\venky\\Desktop\\Data Mining\\Opcodes\\"+filename);
				BufferedReader bufferReader = new BufferedReader(inputFile);
				FileWriter filewriter = new FileWriter("C:\\Users\\venky\\Desktop\\Data Mining\\Trigrams\\"+filename.substring(0, filename.length()-4)+".txt");
				BufferedWriter writer = new BufferedWriter(filewriter);
				String line;
				int k=1;
				while ((line = bufferReader.readLine()) != null)   {
		        	String[] opcodes = line.split(",");
		        	String Trigram="";
				    	for(String part : opcodes){
				    		if(part.length()>1){
				    		if(k<3){
				    			Trigram+=part+"|";
				    			k++;
				    		}
				    		else{
				    			Trigram+=part;
				    			k=1;
				    			set.add(Trigram);
				    			pushmap(map,Trigram);
				    			Trigram="";
				    		}
				    		}
				    	}

				    }
				bufferReader.close();
					System.out.println(map.size());
					for(Entry entry : map.entrySet())
						writer.append(entry.getKey()+"\t"+entry.getValue()+"\n");
					writer.close();
		        }
			}
		System.out.println(set.size());
		for(String trigram : set)
			buffwriter.append(trigram+",");
		buffwriter.close();
		}
	}
